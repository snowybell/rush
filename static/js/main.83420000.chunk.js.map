{"version":3,"sources":["views/Home.js","shared/icons.js","shared/api.js","views/Login.js","views/LoginCallback.js","views/NotFound.js","App.js","reportWebVitals.js","utils/fontAwesome.js","index.js"],"names":["Home","IconGoogle","icon","getOAuthLoginURL","a","axios","get","then","res","data","catch","Container","styled","div","window","location","err","toaster","negative","autoHideDuration","Login","useState","isLoading","setIsLoading","placement","PLACEMENT","topRight","startEnhancer","disabled","onClick","loginHandler","LoginCallback","useLocation","query","URLSearchParams","search","to","NotFound","App","hashType","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","fonts","add","faGoogle","engine","Styletron","ReactDOM","render","value","debug","debugAfterHydration","document","getElementById"],"mappings":"2LAgBeA,MAbf,WACE,OACE,cAAC,IAAD,UACE,4CACQ,uBADR,oBAEmB,uBAFnB,SAGQ,uBAHR,oB,yDCHOC,EAAa,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,Y,wCCDlD,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEC,IACJC,IAAI,yCACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,WACL,KAAM,4CALL,4C,2JCKP,IAAMC,EAAYC,IAAOC,IAAV,K,4CAMf,sBAAAT,EAAA,+EACSD,IACJI,MAAK,SAACC,GACLM,OAAOC,SAAWP,EAAG,KAAH,gBAEnBE,OAAM,SAACM,GAEN,MADAC,IAAQC,SAASF,EAAK,CAAEG,iBAAkB,MACpCH,MAPZ,4C,sBAiCeI,MAtBf,WAAkB,IAAD,EACmBC,oBAAS,GAD5B,mBACRC,EADQ,KACGC,EADH,KAGf,OACE,cAAC,IAAD,CAAkBC,UAAWC,IAAUC,SAAvC,SACE,cAACf,EAAD,UACE,cAAC,IAAD,CACEgB,cAAe1B,EACf2B,SAAUN,EACVA,UAAWA,EACXO,QAAS,WACPN,GAAa,G,0CACbO,GAAepB,OAAM,kBAAMa,GAAa,OAN5C,oCChBOQ,MAXf,WACE,IAAMhB,EAAWiB,cACXC,EAAQ,IAAIC,gBAAgBnB,EAASoB,QAG3C,OADcF,EAAM3B,IAAI,SAIjB,+CAAkB2B,EAAM3B,IAAI,YAF1B,cAAC,IAAD,CAAU8B,GAAG,YCOTC,MAbf,WACE,OACE,cAAC,IAAD,UACE,2CACO,uBADP,gBAEe,uBAFf,SAGQ,uBAHR,cCcSC,MAbf,WACE,OACE,cAAC,IAAD,CAAYC,SAAS,WAArB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1C,IACjC,cAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,SAASC,UAAWtB,IACtC,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,kBAAkBC,UAAWX,IAC/C,cAAC,IAAD,CAAOW,UAAWL,UCFXM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCJdO,IAAMC,IAAIC,K,YCUJC,EAAS,I,MAAIC,GAGnBC,IAASC,OACP,cAAC,IAAD,CAAmBC,MAAOJ,EAAQK,MAHkB,UAGJC,qBAAmB,EAAnE,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.83420000.chunk.js","sourcesContent":["import React from 'react'\nimport { Display1 } from 'baseui/typography'\n\nfunction Home() {\n  return (\n    <Display1>\n      <strong>\n        Rush, <br />\n        work-in-progress <br />\n        Image <br />\n        Annotations\n      </strong>\n    </Display1>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const IconGoogle = <FontAwesomeIcon icon={['fab', 'google']} />\n","import axios from 'axios'\n\nexport async function getOAuthLoginURL() {\n  return axios\n    .get('http://localhost:3001/v1/oauth/google')\n    .then((res) => res.data)\n    .catch(() => {\n      throw 'Error when retrieving OAuth login URL'\n    })\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { IconGoogle } from '../shared/icons'\nimport { Button } from 'baseui/button'\nimport { toaster, ToasterContainer, PLACEMENT } from 'baseui/toast'\nimport { getOAuthLoginURL } from '../shared/api'\n\nconst Container = styled.div`\n  margin: auto;\n  width: fit-content;\n  padding-top: 30vh;\n`\n\nasync function loginHandler() {\n  return getOAuthLoginURL()\n    .then((res) => {\n      window.location = res['data']['redirect_url']\n    })\n    .catch((err) => {\n      toaster.negative(err, { autoHideDuration: 2000 })\n      throw err\n    })\n}\n\nfunction Login() {\n  const [isLoading, setIsLoading] = useState(false)\n\n  return (\n    <ToasterContainer placement={PLACEMENT.topRight}>\n      <Container>\n        <Button\n          startEnhancer={IconGoogle}\n          disabled={isLoading}\n          isLoading={isLoading}\n          onClick={() => {\n            setIsLoading(true)\n            loginHandler().catch(() => setIsLoading(false))\n          }}\n        >\n          Login with Google\n        </Button>\n      </Container>\n    </ToasterContainer>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { Redirect, useLocation } from 'react-router-dom'\n\nfunction LoginCallback() {\n  const location = useLocation()\n  const query = new URLSearchParams(location.search)\n\n  const token = query.get('token')\n  if (!token) {\n    return <Redirect to='/login' />\n  }\n  return <p>Access Token: {query.get('token')}</p>\n}\n\nexport default LoginCallback\n","import React from 'react'\nimport { Display1 } from 'baseui/typography'\n\nfunction NotFound() {\n  return (\n    <Display1>\n      <strong>\n        Hey, <br />\n        what are you <br />\n        doing <br />\n        HERE?\n      </strong>\n    </Display1>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport Home from './views/Home'\nimport Login from './views/Login'\nimport LoginCallback from './views/LoginCallback'\nimport NotFound from './views/NotFound'\n\nfunction App() {\n  return (\n    <HashRouter hashType='hashbang'>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/login' component={Login}/>\n        <Route exact path='/login/callback' component={LoginCallback}/>\n        <Route component={NotFound}/>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { library as fonts } from '@fortawesome/fontawesome-svg-core'\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\n\nfonts.add(faGoogle)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\n// Import font awesome @v5\nimport './utils/fontAwesome'\n\n// Import @uber/basewebui\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\n\nconst engine = new Styletron()\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\n\nReactDOM.render(\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n    <App />\n  </StyletronProvider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}