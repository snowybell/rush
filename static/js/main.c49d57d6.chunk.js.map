{"version":3,"sources":["views/Home.js","shared/icons.js","shared/api.js","components/layouts/container.js","views/Login.js","store/persist.js","store/user.js","components/core_elements/Spinner.js","views/LoginCallback.js","views/NotFound.js","App.js","reportWebVitals.js","utils/fontAwesome.js","index.js"],"names":["Home","IconGoogle","icon","getOAuthLoginURL","a","axios","get","then","res","data","catch","oAuthCode","post","code","Central","styled","div","window","location","err","toaster","negative","autoHideDuration","Login","store","config","useState","isLoading","setIsLoading","style","paddingTop","startEnhancer","disabled","onClick","loginHandler","useUserStore","create","set","token","setToken","name","storage","localStorage","createPersist","Spinner","StyledSpinnerNext","props","color","defaultProps","colors","gray800","LoginCallback","useLocation","state","isPending","setPending","query","URLSearchParams","search","has","useEffect","exchangeToken","to","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","fonts","add","faGoogle","engine","Client","ReactDOM","render","value","debug","debugAfterHydration","placement","PLACEMENT","topRight","document","getElementById"],"mappings":"2LAgBeA,MAbf,WACE,OACE,cAAC,IAAD,UACE,4CACQ,uBADR,oBAEmB,uBAFnB,SAGQ,uBAHR,oB,yCCHOC,EAAa,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,Y,iCCDlD,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEC,IACJC,IAAI,yCACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,WACL,KAAM,4CALL,4C,kEASA,WAA6BC,GAA7B,SAAAP,EAAA,+EACEC,IACJO,KAAK,iDAAkD,CACtDC,KAAMF,IAEPJ,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,WACL,KAAM,8BAPL,4C,yJCTA,IAAMI,EAAUC,IAAOC,IAAV,K,4CCMpB,sBAAAZ,EAAA,+EACSD,IACJI,MAAK,SAACC,GACLS,OAAOC,SAAWV,EAAG,KAAH,gBAEnBE,OAAM,SAACS,GAEN,MADAC,IAAQC,SAASF,EAAK,CAAEG,iBAAkB,MACpCH,MAPZ,4C,sBA+BeI,ICpCSC,EAAOC,EDoChBF,EApBf,WAAkB,IAAD,EACmBG,oBAAS,GAD5B,mBACRC,EADQ,KACGC,EADH,KAGf,OACE,cAACd,EAAD,CAASe,MAAO,CAAEC,WAAY,QAA9B,SACE,cAAC,IAAD,CACEC,cAAe9B,EACf+B,SAAUL,EACVA,UAAWA,EACXM,QAAS,WACPL,GAAa,G,0CACbM,GAAexB,OAAM,kBAAMkB,GAAa,OAN5C,kC,gBEhBOO,EAAeC,aDLJZ,ECAN,SAACa,GAAD,MAAU,CAC1BC,MAAO,KACPC,SAAU,SAACD,GAAD,OAAWD,EAAI,CAAEC,aDFEb,ECMV,CACjBe,KAAM,eACNC,QAASC,cDPJC,kBAAcnB,EAAOC,K,iHEA9B,IAAMmB,EAAU7B,YAAO8B,IAAP9B,CAAH,KACS,SAAC+B,GAAD,OAAWA,EAAMC,SAGvCH,EAAQI,aAAe,CACrBD,MAAOE,IAAOC,SAGDN,QC4BAO,MAhCf,WACE,IAAMjC,EAAWkC,cACXb,EAAWJ,GAAa,SAACkB,GAAD,OAAWA,EAAMd,YAFxB,EAGSb,oBAAS,GAHlB,mBAGhB4B,EAHgB,KAGLC,EAHK,KAMjBC,EAAQ,IAAIC,gBAAgBvC,EAASwC,QACrC/C,EAAY6C,EAAMG,IAAI,SAAWH,EAAMlD,IAAI,QACjD,OAAKK,GAILiD,qBAAU,YNTL,SAAP,mCMUIC,CAAclD,GACXJ,MAAK,SAACC,GACL+C,GAAW,GACXhB,EAAS/B,EAAG,KAAH,UAEVE,OAAM,SAACS,GACNC,IAAQC,SAASF,EAAK,CAAEG,iBAAkB,WAE7C,IAEIgC,EACL,cAACxC,EAAD,CAASe,MAAO,CAAEC,WAAY,QAA9B,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAUgC,GAAG,OAnBN,cAAC,IAAD,CAAUA,GAAG,YCDTC,MAbf,WACE,OACE,cAAC,IAAD,UACE,2CACO,uBADP,gBAEe,uBAFf,SAGQ,uBAHR,cCcSC,MAbf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnE,IACjC,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,SAASC,UAAW5C,IACtC,cAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,kBAAkBC,UAAWhB,IAC/C,cAAC,IAAD,CAAOgB,UAAWJ,UCFXK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCJdO,IAAMC,IAAIC,K,2BCWJC,EAAS,IAAIC,IAGnBC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOJ,EAAQK,MAH2B,UAGbC,qBAAmB,EAA1D,SACE,cAAC,IAAD,CAAkBC,UAAWC,IAAUC,SAAvC,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.c49d57d6.chunk.js","sourcesContent":["import React from 'react'\nimport { Display1 } from 'baseui/typography'\n\nfunction Home() {\n  return (\n    <Display1>\n      <strong>\n        Rush, <br />\n        work-in-progress <br />\n        Image <br />\n        Annotations\n      </strong>\n    </Display1>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const IconGoogle = <FontAwesomeIcon icon={['fab', 'google']} />\n","import axios from 'axios'\n\nexport async function getOAuthLoginURL() {\n  return axios\n    .get('http://localhost:3001/v1/oauth/google')\n    .then((res) => res.data)\n    .catch(() => {\n      throw 'Error when retrieving OAuth login URL'\n    })\n}\n\nexport async function exchangeToken(oAuthCode) {\n  return axios\n    .post('http://localhost:3001/v1/oauth/google/callback', {\n      code: oAuthCode\n    })\n    .then((res) => res.data)\n    .catch(() => {\n      throw 'Error when exchange JWT'\n    })\n}\n","import styled from 'styled-components'\n\nexport const Central = styled.div`\n  margin: auto;\n  width: fit-content;\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { IconGoogle } from '../shared/icons'\nimport { Button } from 'baseui/button'\nimport { toaster } from 'baseui/toast'\nimport { getOAuthLoginURL } from '../shared/api'\nimport { Central } from '../components/layouts/container'\n\nasync function loginHandler() {\n  return getOAuthLoginURL()\n    .then((res) => {\n      window.location = res['data']['redirect_url']\n    })\n    .catch((err) => {\n      toaster.negative(err, { autoHideDuration: 2000 })\n      throw err\n    })\n}\n\nfunction Login() {\n  const [isLoading, setIsLoading] = useState(false)\n\n  return (\n    <Central style={{ paddingTop: '30vh' }}>\n      <Button\n        startEnhancer={IconGoogle}\n        disabled={isLoading}\n        isLoading={isLoading}\n        onClick={() => {\n          setIsLoading(true)\n          loginHandler().catch(() => setIsLoading(false))\n        }}\n      >\n        Login with Google\n      </Button>\n    </Central>\n  )\n}\n\nexport default Login\n","import { persist as createPersist } from 'zustand/middleware'\n\n// Ignore type validation warnings\nexport const persist = (store, config) => {\n  return createPersist(store, config)\n}\n","import create from 'zustand'\nimport { persist } from './persist'\n\nconst userStore = (set) => ({\n  token: null,\n  setToken: (token) => set({ token })\n})\n\nexport const useUserStore = create(\n  persist(userStore, {\n    name: 'persist:user',\n    storage: localStorage\n  })\n)\n","import { StyledSpinnerNext } from 'baseui/spinner'\nimport styled from 'styled-components'\nimport { colors } from 'baseui/tokens'\n\nconst Spinner = styled(StyledSpinnerNext)`\n  border-top-color: ${(props) => props.color};\n`\n\nSpinner.defaultProps = {\n  color: colors.gray800\n}\n\nexport default Spinner\n","import React, { useEffect, useState } from 'react'\nimport { Redirect, useLocation } from 'react-router-dom'\nimport { exchangeToken } from '../shared/api'\nimport { toaster } from 'baseui/toast'\nimport { Central } from '../components/layouts/container'\nimport { useUserStore } from '../store/user'\nimport Spinner from '../components/core_elements/Spinner'\n\nfunction LoginCallback() {\n  const location = useLocation()\n  const setToken = useUserStore((state) => state.setToken)\n  const [isPending, setPending] = useState(true)\n\n  // Retrieving oAuth2 code\n  const query = new URLSearchParams(location.search)\n  const oAuthCode = query.has('code') && query.get('code')\n  if (!oAuthCode) {\n    return <Redirect to='/login' />\n  }\n\n  useEffect(() => {\n    exchangeToken(oAuthCode)\n      .then((res) => {\n        setPending(false)\n        setToken(res['data']['token'])\n      })\n      .catch((err) => {\n        toaster.negative(err, { autoHideDuration: 2000 })\n      })\n  }, [])\n\n  return isPending ? (\n    <Central style={{ paddingTop: '30vh' }}>\n      <Spinner />\n    </Central>\n  ) : (\n    <Redirect to='/' />\n  )\n}\n\nexport default LoginCallback\n","import React from 'react'\nimport { Display1 } from 'baseui/typography'\n\nfunction NotFound() {\n  return (\n    <Display1>\n      <strong>\n        Hey, <br />\n        what are you <br />\n        doing <br />\n        HERE?\n      </strong>\n    </Display1>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport Home from './views/Home'\nimport Login from './views/Login'\nimport LoginCallback from './views/LoginCallback'\nimport NotFound from './views/NotFound'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/login/callback' component={LoginCallback} />\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { library as fonts } from '@fortawesome/fontawesome-svg-core'\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\n\nfonts.add(faGoogle)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\n// Import font awesome @v5\nimport './utils/fontAwesome'\n\n// Import @uber/basewebui\nimport { Provider, DebugEngine } from 'styletron-react'\nimport { Client } from 'styletron-engine-atomic'\nimport { PLACEMENT, ToasterContainer } from 'baseui/toast'\n\nconst engine = new Client()\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\n\nReactDOM.render(\n  <Provider value={engine} debug={debug} debugAfterHydration>\n    <ToasterContainer placement={PLACEMENT.topRight}>\n      <App />\n    </ToasterContainer>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}