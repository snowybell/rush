{"version":3,"sources":["views/Home.js","shared/icons.js","views/Login.js","views/NotFound.js","App.js","reportWebVitals.js","utils/fontAwesome.js","index.js"],"names":["Home","IconGoogle","icon","Container","styled","div","a","Promise","rs","setTimeout","toaster","positive","autoHideDuration","Login","useState","isLoading","setIsLoading","placement","PLACEMENT","topRight","startEnhancer","disabled","onClick","loginHandler","finally","NotFound","App","hashType","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fonts","add","faGoogle","engine","Styletron","ReactDOM","render","value","debug","debugAfterHydration","document","getElementById"],"mappings":"2LAeeA,MAbf,WACE,OACE,cAAC,IAAD,UACE,4CACQ,uBADR,oBAEmB,uBAFnB,SAGQ,uBAHR,oB,yDCHOC,EAAa,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,Y,4JCKzD,IAAMC,EAAYC,IAAOC,IAAV,K,4CAMf,sBAAAC,EAAA,+EACS,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WACTC,IAAQC,SAAS,aAAc,CAAEC,iBAAkB,MACnDJ,MACC,SALP,4C,sBAiCeK,MAxBf,WAAkB,IAAD,EACmBC,oBAAS,GAD5B,mBACRC,EADQ,KACGC,EADH,KAGf,OACE,cAAC,IAAD,CAAkBC,UAAWC,IAAUC,SAAvC,SACE,cAAChB,EAAD,UACE,cAAC,IAAD,CACEiB,cAAenB,EACfoB,SAAUN,EACVA,UAAWA,EACXO,QAAS,WACPN,GAAa,G,0CACbO,GAAeC,SAAQ,WACrBR,GAAa,OAPnB,oCCbOS,MAbf,WACE,OACE,cAAC,IAAD,UACE,2CACO,uBADP,gBAEe,uBAFf,SAGQ,uBAHR,cCYSC,MAZf,WACE,OACE,cAAC,IAAD,CAAYC,SAAS,WAArB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9B,IACjC,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,SAASC,UAAWjB,IACtC,cAAC,IAAD,CAAOiB,UAAWL,UCCXM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCJdQ,IAAMC,IAAIC,K,YCUJC,EAAS,I,MAAIC,GAGnBC,IAASC,OACP,cAAC,IAAD,CAAmBC,MAAOJ,EAAQK,MAHkB,UAGJC,qBAAmB,EAAnE,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.e8e429f6.chunk.js","sourcesContent":["import { Display1 } from 'baseui/typography'\n\nfunction Home() {\n  return (\n    <Display1>\n      <strong>\n        Rush, <br />\n        work-in-progress <br />\n        Image <br />\n        Annotations\n      </strong>\n    </Display1>\n  )\n}\n\nexport default Home\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const IconGoogle = <FontAwesomeIcon icon={['fab', 'google']} />\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { IconGoogle } from '../shared/icons'\nimport { Button, KIND, SIZE, SHAPE } from 'baseui/button'\nimport { toaster, ToasterContainer, PLACEMENT } from 'baseui/toast'\nimport { Block } from 'baseui/block'\n\nconst Container = styled.div`\n  margin: auto;\n  width: fit-content;\n  padding-top: 30vh;\n`\n\nasync function loginHandler() {\n  return new Promise((rs) => {\n    setTimeout(() => {\n      toaster.positive('Hello, RK!', { autoHideDuration: 2000 })\n      rs()\n    }, 1000)\n  })\n}\n\nfunction Login() {\n  const [isLoading, setIsLoading] = useState(false)\n\n  return (\n    <ToasterContainer placement={PLACEMENT.topRight}>\n      <Container>\n        <Button\n          startEnhancer={IconGoogle}\n          disabled={isLoading}\n          isLoading={isLoading}\n          onClick={() => {\n            setIsLoading(true)\n            loginHandler().finally(() => {\n              setIsLoading(false)\n            })\n          }}\n        >\n          Login with Google\n        </Button>\n      </Container>\n    </ToasterContainer>\n  )\n}\n\nexport default Login\n","import { Display1 } from 'baseui/typography'\n\nfunction NotFound() {\n  return (\n    <Display1>\n      <strong>\n        Hey, <br />\n        what are you <br />\n        doing <br />\n        HERE?\n      </strong>\n    </Display1>\n  )\n}\n\nexport default NotFound\n","import { HashRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './views/Home'\nimport Login from './views/Login'\nimport NotFound from './views/NotFound'\n\nfunction App() {\n  return (\n    <HashRouter hashType='hashbang'>\n      <Switch>\n        <Route exact path='/' component={Home}></Route>\n        <Route exact path='/login' component={Login}></Route>\n        <Route component={NotFound}></Route>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { library as fonts } from '@fortawesome/fontawesome-svg-core'\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\n\nfonts.add(faGoogle)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\n// Import font awesome @v5\nimport './utils/fontAwesome'\n\n// Import @uber/basewebui\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\n\nconst engine = new Styletron()\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\n\nReactDOM.render(\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n    <App />\n  </StyletronProvider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}